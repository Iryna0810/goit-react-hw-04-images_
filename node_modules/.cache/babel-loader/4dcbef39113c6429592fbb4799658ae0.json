{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043D\\u0434\\u0440\\u0435\\u0439\\\\Documents\\\\GitHub\\\\goit-react-hw-04-images_\\\\src\\\\components\\\\Modal\\\\Modal.jsx\",\n    _s = $RefreshSig$();\n\nimport { createPortal } from 'react-dom';\nimport PropTypes from \"prop-types\";\nimport './modal.css';\nimport { useEffect } from 'react';\nimport { useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modalRoot = document.querySelector('#modal-root');\nexport const Modal = _ref => {\n  _s();\n\n  let {\n    onCloseModal,\n    children\n  } = _ref;\n  const handleKeyDown = useCallback(evt => {\n    if (evt.code === 'Escape') {\n      onCloseModal();\n    }\n  }, [onCloseModal]);\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n  }, [handleKeyDown]);\n  useEffect(() => {\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyDown]);\n\n  const handleBackdropClick = evt => {\n    if (evt.currentTarget === evt.target) {\n      onCloseModal();\n    }\n  };\n\n  return /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal_backdrop\",\n    onClick: handleBackdropClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal_content\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 13\n  }, this), modalRoot);\n};\n\n_s(Modal, \"ZGcy8BGgygE8RMEcovkpKymdDMM=\");\n\n_c = Modal;\nModal.propTypes = {\n  onCloseModal: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["C:/Users/Андрей/Documents/GitHub/goit-react-hw-04-images_/src/components/Modal/Modal.jsx"],"names":["createPortal","PropTypes","useEffect","useCallback","modalRoot","document","querySelector","Modal","onCloseModal","children","handleKeyDown","evt","code","window","addEventListener","removeEventListener","handleBackdropClick","currentTarget","target","propTypes","func","isRequired"],"mappings":";;;AAAA,SAASA,YAAT,QAA6B,WAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,aAAP;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,OAA5B;;AAEA,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAlB;AAEA,OAAO,MAAMC,KAAK,GAAG,QAA8B;AAAA;;AAAA,MAA7B;AAACC,IAAAA,YAAD;AAAeC,IAAAA;AAAf,GAA6B;AAC/C,QAAMC,aAAa,GAAGP,WAAW,CAAGQ,GAAD,IAAS;AACxC,QAAIA,GAAG,CAACC,IAAJ,KAAa,QAAjB,EAA2B;AACvBJ,MAAAA,YAAY;AACf;AACJ,GAJgC,EAI9B,CAACA,YAAD,CAJ8B,CAAjC;AAMAN,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCJ,aAAnC;AACH,GAFQ,EAEN,CAACA,aAAD,CAFM,CAAT;AAIAR,EAAAA,SAAS,CAAC,MAAM;AACZ,WAAO,MAAM;AAAEW,MAAAA,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCL,aAAtC;AAAsD,KAArE;AACH,GAFQ,EAEP,CAACA,aAAD,CAFO,CAAT;;AAKA,QAAMM,mBAAmB,GAAGL,GAAG,IAAI;AAC/B,QAAIA,GAAG,CAACM,aAAJ,KAAsBN,GAAG,CAACO,MAA9B,EAAsC;AAClCV,MAAAA,YAAY;AACf;AACJ,GAJD;;AAMI,sBAAOR,YAAY,eACf;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,OAAO,EAAEgB,mBAAzC;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBACKP;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADe,EAMfL,SANe,CAAnB;AAQH,CA9BE;;GAAMG,K;;KAAAA,K;AAiCbA,KAAK,CAACY,SAAN,GAAkB;AACdX,EAAAA,YAAY,EAAEP,SAAS,CAACmB,IAAV,CAAeC;AADf,CAAlB","sourcesContent":["import { createPortal } from 'react-dom';\r\nimport PropTypes from \"prop-types\";\r\nimport './modal.css';\r\nimport { useEffect } from 'react';\r\nimport { useCallback } from 'react';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport const Modal = ({onCloseModal, children}) => {\r\n    const handleKeyDown = useCallback( (evt) => {\r\n        if (evt.code === 'Escape') {\r\n            onCloseModal();\r\n        }\r\n    }, [onCloseModal]) \r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown)\r\n    }, [handleKeyDown]);\r\n\r\n    useEffect(() => {\r\n        return () => { window.removeEventListener('keydown', handleKeyDown);}\r\n    },[handleKeyDown]);\r\n\r\n\r\n    const handleBackdropClick = evt => {\r\n        if (evt.currentTarget === evt.target) {\r\n            onCloseModal();\r\n        }\r\n    }\r\n    \r\n        return createPortal(\r\n            <div className='modal_backdrop' onClick={handleBackdropClick}>\r\n                <div className='modal_content'>\r\n                    {children}\r\n                </div>\r\n            </div>,\r\n            modalRoot,\r\n        );\r\n    }\r\n\r\n\r\nModal.propTypes = {\r\n    onCloseModal: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}