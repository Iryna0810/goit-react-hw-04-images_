{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u043D\\u0434\\u0440\\u0435\\u0439\\\\Documents\\\\GitHub\\\\goit-react-hw-04-images_\\\\src\\\\components\\\\ImageGallery\\\\ImageGallery.jsx\",\n    _s = $RefreshSig$();\n\nimport { ImageGalleryItem } from \"components/ImageGalleryItem\";\nimport { List, Button } from '../styled';\nimport { serchPhoto } from \"servises/fetch_img\";\nimport { Vortex } from 'react-loader-spinner';\nimport PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ImageGallery = _ref => {\n  _s();\n\n  let {\n    searchImages,\n    page\n  } = _ref;\n  const [images, setImages] = useState([]);\n  const [currentImages, setCurrentImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  useEffect(() => {\n    if (!searchImages) return;\n    setIsLoading(true);\n    setImages([]);\n    setCurrentPage(1);\n    serchPhoto(searchImages, page).then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n      setImages(images => [...images, ...data.hits]);\n      setCurrentImages(data.hits);\n    }).catch(error => setError(error)).finally(() => {\n      setIsLoading(false);\n    });\n  }, [page, searchImages]);\n  useEffect(() => {\n    if (!searchImages || currentPage === 1) return;\n    setIsLoading(true);\n    serchPhoto(searchImages, currentPage).then(_ref3 => {\n      let {\n        data\n      } = _ref3;\n      setImages(images => [...images, ...data.hits]);\n      setCurrentImages(data.hits);\n    }).catch(error => setError(error)).finally(() => {\n      setIsLoading(false);\n    });\n  }, [currentPage]);\n\n  const handleMoreLoad = () => {\n    setCurrentPage(prev => prev + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      className: \"gallery\",\n      children: [isLoading && /*#__PURE__*/_jsxDEV(Vortex, {\n        visible: true,\n        height: \"280\",\n        width: \"280\",\n        ariaLabel: \"vortex-loading\",\n        wrapperStyle: {},\n        wrapperClass: \"vortex-wrapper\",\n        colors: ['red', 'green', 'blue', 'yellow', 'orange', 'purple']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 31\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Something went wrong. Try again later\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 27\n      }, this), images && images.map(image => /*#__PURE__*/_jsxDEV(ImageGalleryItem, {\n        image: image\n      }, image.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), currentImages.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleMoreLoad,\n      children: \"Load More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 42\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ImageGallery, \"1m8VVXlkifzjWpMrQQX6uZrp2ek=\");\n\n_c = ImageGallery;\nImageGallery.propTypes = {\n  searchImages: PropTypes.string.isRequired,\n  page: PropTypes.number.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageGallery\");","map":{"version":3,"sources":["C:/Users/Андрей/Documents/GitHub/goit-react-hw-04-images_/src/components/ImageGallery/ImageGallery.jsx"],"names":["ImageGalleryItem","List","Button","serchPhoto","Vortex","PropTypes","useState","useEffect","ImageGallery","searchImages","page","images","setImages","currentImages","setCurrentImages","isLoading","setIsLoading","error","setError","currentPage","setCurrentPage","then","data","hits","catch","finally","handleMoreLoad","prev","map","image","id","length","propTypes","string","isRequired","number"],"mappings":"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","sourcesContent":["import { ImageGalleryItem } from \"components/ImageGalleryItem\";\r\nimport { List, Button } from '../styled'\r\nimport { serchPhoto } from \"servises/fetch_img\";\r\nimport { Vortex } from 'react-loader-spinner';\r\nimport PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport const ImageGallery = ({ searchImages, page }) => {\r\n    const [images, setImages] = useState([]);\r\n    const [currentImages, setCurrentImages] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n\r\n    useEffect(() => {\r\n        if (!searchImages) return;\r\n        setIsLoading(true);\r\n        setImages([]);\r\n        setCurrentPage(1);\r\n        serchPhoto(searchImages, page)\r\n            .then(({ data }) => {\r\n                setImages(images => [...images, ...data.hits]);\r\n                setCurrentImages(data.hits)\r\n            })\r\n            .catch((error) => setError(error))\r\n            .finally(() => {\r\n                setIsLoading(false)\r\n            })\r\n\r\n    }, [page, searchImages]);\r\n    \r\n    useEffect(() => {\r\n        if (!searchImages || currentPage === 1) return;\r\n        setIsLoading(true);\r\n        serchPhoto(searchImages, currentPage)\r\n            .then(({ data }) => {\r\n                setImages(images => [...images, ...data.hits]);\r\n                setCurrentImages(data.hits)\r\n            })\r\n            .catch((error) => setError(error))\r\n            .finally(() => {\r\n                setIsLoading(false)\r\n            })\r\n\r\n    }, [currentPage]);\r\n\r\n    const handleMoreLoad = () => {\r\n        setCurrentPage(prev => prev + 1)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <List className=\"gallery\">\r\n                \r\n                {isLoading && <Vortex\r\n                    visible={true}\r\n                    height=\"280\"\r\n                    width=\"280\"\r\n                    ariaLabel=\"vortex-loading\"\r\n                    wrapperStyle={{}}\r\n                    wrapperClass=\"vortex-wrapper\"\r\n                    colors={['red', 'green', 'blue', 'yellow', 'orange', 'purple']}\r\n                />}\r\n                \r\n                {error && <div>Something went wrong. Try again later</div>}\r\n                \r\n                {images && images.map((image) =>\r\n                    <ImageGalleryItem key={image.id} image={image} />)}\r\n                \r\n            </List>\r\n            \r\n            {currentImages.length > 0 && <Button onClick={handleMoreLoad}>Load More</Button>}\r\n    \r\n        </>\r\n    )\r\n};\r\n\r\n\r\nImageGallery.propTypes = {\r\n    searchImages: PropTypes.string.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n};"]},"metadata":{},"sourceType":"module"}